<configuration>

  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="DISCORD" class="com.github.napstr.logback.DiscordAppender">
    <webhookUri>https://discord.com/api/webhooks/1091104948315492374/FiJZld-BlPeRCYVstp1AMP73MCOiq3-Li5E2fxawrq7WCnSqVLcRw59cClF-l3xHkcrZ</webhookUri>
    <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
      <evaluator class="ch.qos.logback.classic.boolex.JaninoEventEvaluator">
        <expression>return (exception != null &amp;&amp; (exception.contains("502 Bad Gateway") || exception.contains("503 Service Unavailable")));</expression>
      </evaluator>
      <OnMismatch>NEUTRAL</OnMismatch>
      <OnMatch>DENY</OnMatch>
    </filter>
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>`%d{HH:mm:ss} [%thread] [%-5level] %logger{36} - %msg`%n%replace(%ex){'(?s).*\n(.*)', '```$0```'}%nopex</pattern>
    </layout>
    <tts>false</tts>
  </appender>

  <appender name="ASYNC_DISCORD" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="DISCORD" />
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>ERROR</level>
    </filter>
  </appender>

  <logger name="club.minnced.discord.webhook.WebhookClient" level="ERROR" additivity="false">
    <appender-ref ref="CONSOLE" />
  </logger>

  <root level="INFO">
    <appender-ref ref="ASYNC_DISCORD" />
    <appender-ref ref="CONSOLE" />
  </root>

</configuration>
